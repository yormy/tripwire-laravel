name: Testing

on: [push]

jobs:
  unit-test:
    name: Unit testing
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Cache Composer dependencies
        uses: actions/cache@v3
        with:
          path: /tmp/composer-cache
          key: ${{ runner.os }}-${{ hashFiles('composer.lock') }}

      - name: Installing dependencies
        uses: php-actions/composer@v6
        with:
          php_version: 8.2
          php_extensions: "json zip sodium pcntl bcmath"

      - name: Running unit test
        uses: php-actions/phpunit@v3
        with:
          version: 10.5.13
          php_version: 8.2
          php_extensions: "json zip sodium pcntl bcmath xdebug pcov"
          args: "-d date.timezone=Asia/Jakarta"
          memory_limit: 300M
          configuration: phpunit.xml
          coverage_clover: "./coverage/clover.xml"

      - name: Ensure coverage > 70
        id: test-coverage
        uses: johanvanhelden/gha-clover-test-coverage-check@v1
        with:
          percentage: "70"
          filename: "./coverage/clover.xml"

      - name: Generate the badge SVG image
        uses: emibcn/badge-action@v1
        id: badge
        with:
          label: 'Coverage'
          status: ${{ steps.coverage.outputs.coverage }}
          path: ./badges/test-coverage.svg
          color: ${{ steps.coverage.outputs.coveragelines > 70 && 'green' || 'red' }}

#  phplint:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v4
#
#      - name: Get changed files
#        id: changed-files
#        uses: tj-actions/changed-files@v39
#
#      - name: Run Laravel Pint
#        uses: sergotail/laravel-pint-action@v2
#        with:
#          onlyFiles: ${{ steps.changed-files.outputs.all_changed_files }}
#          testMode: true
#          verboseMode: true
#          configPath: ./pint.json
#          preset: laravel
#          onlyDirty: false
#          annotate: true
#          pintVersion: 1.8.0
#          annotateVersion: 1.8.5
#          useComposer: true

  phpstan:
    runs-on: ubuntu-latest
    steps:
      - name: PHPStan Static Analysis
        uses: php-actions/phpstan@v3
        with:
          configuration: phpstan.neon
          memory_limit: 256M
# pint
# stan
#insights
