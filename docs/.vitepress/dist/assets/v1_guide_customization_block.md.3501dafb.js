import{_ as s,o as e,c as o,V as a}from"./chunks/framework.5f0cae6b.js";const u=JSON.parse('{"title":"Respond to blocked user/ip","description":"","frontmatter":{},"headers":[],"relativePath":"v1/guide/customization/block.md","filePath":"v1/guide/customization/block.md"}'),n={name:"v1/guide/customization/block.md"},l=a(`<h1 id="respond-to-blocked-user-ip" tabindex="-1">Respond to blocked user/ip <a class="header-anchor" href="#respond-to-blocked-user-ip" aria-label="Permalink to &quot;Respond to blocked user/ip&quot;">​</a></h1><p>Specify in your <code>tripwire.php</code> how tripwire should respond in case of the request came from a blocked user or ip</p><h1 id="specify-the-default-http-code-for-blocks" tabindex="-1">Specify the default HTTP code for blocks <a class="header-anchor" href="#specify-the-default-http-code-for-blocks" aria-label="Permalink to &quot;Specify the default HTTP code for blocks&quot;">​</a></h1><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">-&gt;</span><span style="color:#82AAFF;">blockCode</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">406</span><span style="color:#89DDFF;">)</span></span></code></pre></div><h1 id="default-block-response" tabindex="-1">Default block response <a class="header-anchor" href="#default-block-response" aria-label="Permalink to &quot;Default block response&quot;">​</a></h1><p>Specify the default block response (this can be overridden by any wire) Create 2 objects to specify how to respond in case of a JSON and in case of an HTML request</p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">-&gt;</span><span style="color:#82AAFF;">blockResponse</span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#FFCB6B;">JsonResponseConfig</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">make</span><span style="color:#89DDFF;">()-&gt;</span><span style="color:#82AAFF;">code</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">423</span><span style="color:#89DDFF;">),</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#FFCB6B;">HtmlResponseConfig</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">make</span><span style="color:#89DDFF;">()-&gt;</span><span style="color:#82AAFF;">code</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">423</span><span style="color:#89DDFF;">)-&gt;</span><span style="color:#82AAFF;">view</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">tripwire-laravel::blocked</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">),</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">)</span></span></code></pre></div><p>See the options how to create these objects:</p><ul><li><a href="./../references/json-response.html">JSON Response</a></li><li><a href="./../references/html-response.html">HTML Response</a></li></ul>`,9),p=[l];function t(c,r,i,d,F,h){return e(),o("div",null,p)}const D=s(n,[["render",t]]);export{u as __pageData,D as default};
