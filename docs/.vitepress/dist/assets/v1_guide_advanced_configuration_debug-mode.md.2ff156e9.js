import{_ as e,o as a,c as t,V as o}from"./chunks/framework.5f0cae6b.js";const _=JSON.parse('{"title":"Debug mode","description":"","frontmatter":{},"headers":[],"relativePath":"v1/guide/advanced/configuration/debug-mode.md","filePath":"v1/guide/advanced/configuration/debug-mode.md"}'),d={name:"v1/guide/advanced/configuration/debug-mode.md"},i=o('<h1 id="debug-mode" tabindex="-1">Debug mode <a class="header-anchor" href="#debug-mode" aria-label="Permalink to &quot;Debug mode&quot;">​</a></h1><p>The debug mode is intended to find why certain wires were tripped. This will log some additional information to the database for inspection which wire was triggered and why. This greatly speeds up your investigation of false positives.</p><p>Update your <code>.env</code></p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">TRIPWIRE_DEBUG_MODE</span><span style="color:#89DDFF;">=true</span></span></code></pre></div><h2 id="feedback" tabindex="-1">Feedback <a class="header-anchor" href="#feedback" aria-label="Permalink to &quot;Feedback&quot;">​</a></h2><p>If you notice false positives that I caused by my ruleset, please let me know and I will adjust the rules accordingly. When you do so, please include the actual payload that was triggering the wire while it should not.</p>',6),s=[i];function n(r,c,l,p,u,h){return a(),t("div",null,s)}const m=e(d,[["render",n]]);export{_ as __pageData,m as default};
