import{_ as e,o as t,c as i,V as a}from"./chunks/framework.5f0cae6b.js";const _=JSON.parse('{"title":"Events","description":"","frontmatter":{},"headers":[],"relativePath":"v1/guide/references/events.md","filePath":"v1/guide/references/events.md"}'),r={name:"v1/guide/references/events.md"},d=a('<h1 id="events" tabindex="-1">Events <a class="header-anchor" href="#events" aria-label="Permalink to &quot;Events&quot;">​</a></h1><p>Blocked Events:</p><ul><li>When a block is added most of the time multiple events are sent. You can simply catch the generic event or a more specific one if you like</li><li>When a block is added there could be a notification sent out (see notifications in your config);</li></ul><p>Suggestions</p><ul><li>When a block is added logging out the current user is advisable</li></ul><table><thead><tr><th>Event</th><th>When</th><th>Description</th></tr></thead><tbody><tr><td>TripwireBlockedEvent</td><td>Block Created</td><td>generic unspecified what or where but a block just happend. This is a good case to logout the current user and redirect to login page</td></tr><tr><td>TripwireBlockedIpEvent</td><td>Block Created</td><td>When a block on ip is added</td></tr><tr><td>TripwireBlockedBrowserEvent</td><td>Block Created</td><td>When a block on browser fingerprint is added</td></tr><tr><td>TripwireBlockedUserEvent</td><td>Block Created</td><td>When a block on userId is added</td></tr></tbody></table><h2 id="typical-use-cases" tabindex="-1">Typical use cases: <a class="header-anchor" href="#typical-use-cases" aria-label="Permalink to &quot;Typical use cases:&quot;">​</a></h2><h3 id="tripwireblockedevent" tabindex="-1">TripwireBlockedEvent <a class="header-anchor" href="#tripwireblockedevent" aria-label="Permalink to &quot;TripwireBlockedEvent&quot;">​</a></h3><ul><li>User logout</li><li>Send admin notification</li></ul>',9),o=[d];function n(s,c,l,h,u,p){return t(),i("div",null,o)}const k=e(r,[["render",n]]);export{_ as __pageData,k as default};
