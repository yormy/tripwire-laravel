import{_ as s,o as n,c as e,V as a}from"./chunks/framework.5f0cae6b.js";const F=JSON.parse('{"title":"Exceptions Inspector","description":"","frontmatter":{},"headers":[],"relativePath":"v1/guide/advanced/setup/exceptions.md","filePath":"v1/guide/advanced/setup/exceptions.md"}'),p={name:"v1/guide/advanced/setup/exceptions.md"},o=a(`<h1 id="exceptions-inspector" tabindex="-1">Exceptions Inspector <a class="header-anchor" href="#exceptions-inspector" aria-label="Permalink to &quot;Exceptions Inspector&quot;">â€‹</a></h1><p>In order to track and act upon global app exceptions like model or page not found you need to add the ExceptionInspector in your app exception handler class</p><p>This is needed for wires like ModelNotFound and PageNotFound</p><p>Add the ExceptionInspector to your render function of your exception handler</p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki material-theme-palenight has-focused-lines"><code><span class="line"><span style="color:#676E95;font-style:italic;">// App/Exceptions/Hander.php</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F78C6C;">use</span><span style="color:#FFCB6B;"> </span><span style="color:#A6ACCD;">Yormy</span><span style="color:#89DDFF;">\\</span><span style="color:#A6ACCD;">TripwireLaravel</span><span style="color:#89DDFF;">\\</span><span style="color:#A6ACCD;">Services</span><span style="color:#89DDFF;">\\</span><span style="color:#A6ACCD;">ExceptionInspector</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">render</span><span style="color:#89DDFF;">($</span><span style="color:#A6ACCD;">request</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Throwable</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">exception</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">...</span></span>
<span class="line has-focus"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">ExceptionInspector</span><span style="color:#89DDFF;">())-&gt;</span><span style="color:#82AAFF;">inspect</span><span style="color:#89DDFF;">($</span><span style="color:#A6ACCD;">exception</span><span style="color:#89DDFF;">);</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">...</span></span></code></pre></div>`,5),l=[o];function t(c,r,i,d,y,D){return n(),e("div",null,l)}const A=s(p,[["render",t]]);export{F as __pageData,A as default};
